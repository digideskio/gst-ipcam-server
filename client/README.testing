This is a brief instruction guide to fetch, build and test gst-ipcam-client on Ubuntu 9.04.

I. FETCH SOURCE CODE
- Create a new folder on your hard disk to store source code.
 - Go to that folder and fetch the code with this command:
	$ git clone git://github.com/trungnt/gst-ipcam-server.git
   After finishing this command, a sub-folder named "gst-ipcam-server" will be created with our source code inside.
 - Go to gst-ipcam-server folder:
	$ cd gst-ipcam-server
 - To test a given release - for example, release XXX - use this command:
	$ git reset --hard XXX
 - To work with the development version, use the following command:
   	$ git checkout --track -b client-development origin/client-development
 - Notes: If the development branch was already fetched, no need to fetch it again. Instead, switch to the branch by the commands:
	$ git checkout client-development 	# to switch to existing client-development branch.
	$ git pull 				# to update to the latest revision.
 
II. BUILD
 - NOTE: before building the client, go to section III to check whether all necessary packages are present in your system.
 - Go to the folder "client".
 - Build the package:
	$ make

III. SOFTWARE REQUIREMENTS
1. Basic gstreamer packages
 - Run following command to install required basic gstreamer packages:
	$ sudo apt-get install gstreamer0.10-plugins-base gstreamer0.10-plugins-good gstreamer0.10-plugins-bad gstreamer0.10-ffmpeg

2. Gstreamers version >= 0.10.24.1, from ppa repository:
- Add following lines to /etc/apt/sources.list:  
	deb http://ppa.launchpad.net/gstreamer-developers/ppa/ubuntu jaunty main  
	deb-src http://ppa.launchpad.net/gstreamer-developers/ppa/ubuntu jaunty main 

 - Then:
	$ sudo apt-get update
	$ sudo apt-get install libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev gstreamer0.10-ffmpeg
 
3. Build tools, if not installed yet:  
    $ sudo apt-get install autoconf automake pkg-config libtool build-essential gettext libglib2.0-dev libgtk2.0-dev

IV. RUN
 - run command:
   	$ ./gst-ipcam-client
 - Usage: the client is simple, investigate and try it yourself.
 

